# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def solution1(self,head):
        
        dic = dict()
        while head:
            if head in dic:
                return True
            else:
                dic[head] = 1
            head = head.next
        return False
            
    def solution2(self,head):
        slow = head
        fast = head
        
        while fast and fast.next:
            slow = slow.next 
            fast = fast.next.next
            if slow == fast:
                return True
        return False
    def hasCycle(self, head: Optional[ListNode]) -> bool:
        
        #return self.solution1(head)
        return self.solution2(head)
        
